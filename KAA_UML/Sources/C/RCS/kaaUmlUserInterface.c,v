head	1.4;
access;
symbols;
locks
	karen.arcoverde:1.4; strict;
comment	@ * @;


1.4
date	2018.11.05.15.41.40;	author karen.arcoverde;	state Exp;
branches;
next	1.3;

1.3
date	2018.11.03.20.56.35;	author karen.arcoverde;	state Exp;
branches;
next	1.2;

1.2
date	2018.11.03.20.55.13;	author karen.arcoverde;	state Exp;
branches;
next	1.1;

1.1
date	2018.11.03.18.44.42;	author karen.arcoverde;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@/*
 * Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * Prof. Marcelo Luiz Drumond Lanza 
 * EEL270 - Computacao II - Turma 2018/2
 *
 * $Author: karen.arcoverde $
 * $Date: 2018/11/03 20:56:35 $
 * $Log: kaaUmlUserInterface.c,v $
 * Revision 1.3  2018/11/03 20:56:35  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.2  2018/11/03 20:55:13  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.1  2018/11/03 18:44:42  karen.arcoverde
 * Initial revision
 *
 *
 */


#include "kaaUmlUserInterface.h"
#include "kaaUmlTypes.h"
#include "kaaUmlErrors.h"


char *kaaUmlCliUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount] =
{
	{
		"Enter",
		"Help"
	},
	
	{
		"Entrar",
		"Ajuda"
	}
};





char *kaaUmlNcursesUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount] =
{
	{
		"Enter",
		"Help"
	},
	
	{
		"Entrar",
		"Ajuda"
	}
};





char *kaaUmlWebUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount] =
{
	{
		"Enter",
		"Help"
	},
	
	{
		"Entrar",
		"Ajuda"
	}
};






/*
 * char *
 * KaaUmlGetCliUserInterfaceMessage (kaaUserInterfaceMessageNumberType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlUserInterfaceMessageNumberType - details what is the number of message we want to show (I)
 * kaaUmlLanguageType - say in what language do we see the message output (I)
 *
 * Returned code:
 * char * - Is the message converted 
 *
 * Description:
 * This function converts the message from a code to the wanted language - works only for Comand Line arguments
 */

char *
KaaUmlGetCliUserInterfaceMessage (kaaUmlUserInterfaceMessageNumberType kaaUmlUserInterfaceMessageNumber, kaaUmlLanguageType kaaUmlLanguageCode)
{
	if ((kaaUmlUserInterfaceMessageNumber < 0) || (kaaUmlUserInterfaceMessageNumber >= kaaUmlUserInterfaceStringAmount))
	      return KaaUmlGetCliErrorMessage (kaaUmlErrorGettingInterfaceMessage, kaaUmlLanguageCode);

	if ((kaaUmlLanguageCode < 0) || (kaaUmlLanguageCode >= kaaUmlLanguageAmount))
		kaaUmlLanguageCode = 0;	/* if is not possible to identify the language, return english */
	
	return kaaUmlCliUserInterfaceMessages [kaaUmlLanguageCode] [kaaUmlUserInterfaceMessageNumber];	
}	





/*
 * char *
 * KaaUmlGetNcursesUserInterfaceMessage (kaaUserInterfaceMessageNumberType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlUserInterfaceMessageNumberType - details what is the number of message we want to show (I)
 * kaaUmlLanguageType - say in what language do we see the message output (I)
 *
 * Returned code:
 * char * - Is the message converted 
 *
 * Description:
 * This function converts the message from a code to the wanted language - works only for Ncurses Interface
 */

char *
KaaUmlGetNcursesUserInterfaceMessage (kaaUmlUserInterfaceMessageNumberType kaaUmlUserInterfaceMessageNumber, kaaUmlLanguageType kaaUmlLanguageCode)
{
	if ((kaaUmlUserInterfaceMessageNumber < 0) || (kaaUmlUserInterfaceMessageNumber >= kaaUmlUserInterfaceStringAmount))
		return KaaUmlGetNcursesErrorMessage (kaaUmlErrorGettingInterfaceMessage, kaaUmlLanguageCode);

	if ((kaaUmlLanguageCode < 0) || (kaaUmlLanguageCode >= kaaUmlLanguageAmount))
		kaaUmlLanguageCode = 0;	/* if is not possible to identify the language, return english */
	
	return kaaUmlNcursesUserInterfaceMessages [kaaUmlLanguageCode] [kaaUmlUserInterfaceMessageNumber];	
}	






/*
 * char *
 * KaaUmlGetWebUserInterfaceMessage (kaaUserInterfaceMessageNumberType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlUserInterfaceMessageNumberType - details what is the number of message we want to show (I)
 * kaaUmlLanguageType - say in what language do we see the message output (I)
 *
 * Returned code:
 * char * - Is the message converted 
 *
 * Description:
 * This function converts the message from a code to the wanted language - works only for Web Interface
 */

char *
KaaUmlGetWebUserInterfaceMessage (kaaUmlUserInterfaceMessageNumberType kaaUmlUserInterfaceMessageNumber, kaaUmlLanguageType kaaUmlLanguageCode)
{
	if ((kaaUmlUserInterfaceMessageNumber < 0) || (kaaUmlUserInterfaceMessageNumber >= kaaUmlUserInterfaceStringAmount))
	      return KaaUmlGetWebErrorMessage (kaaUmlErrorGettingInterfaceMessage, kaaUmlLanguageCode);

	if ((kaaUmlLanguageCode < 0) || (kaaUmlLanguageCode >= kaaUmlLanguageAmount))
		kaaUmlLanguageCode = 0;	/* if is not possible to identify the language, return english */
	
	return kaaUmlWebUserInterfaceMessages [kaaUmlLanguageCode] [kaaUmlUserInterfaceMessageNumber];	
}	


/* $RCSfile: kaaUmlUserInterface.c,v $ */
@


1.3
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/03 20:55:13 $
d11 3
d25 2
d29 1
a29 2

char *kaaUmlCliUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount]
d46 1
a46 1
char *kaaUmlNcursesUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount]
d63 1
a63 1
char *kaaUmlWebUserInterfaceMessages [kaaUmlLanguageAmount] [kaaUmlUserInterfaceStringAmount]
d100 1
a100 1
	      return NULL;
d128 1
a128 1
KaaUmlGetNcursesUserInterfaceMessage (kaaUmlUserInterfaceMessageNumberType kaaUmlUserInterfaceMessageNumber, kaaUmlLanguageType kaaUmlLanguageCode);
d131 1
a131 1
	      return NULL;
d160 1
a160 1
KaaUmlGetWebUserInterfaceMessage (kaaUmlUserInterfaceMessageNumberType kaaUmlUserInterfaceMessageNumber, kaaUmlLanguageType kaaUmlLanguageCode);
d163 1
a163 1
	      return NULL;
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/03 18:44:42 $
d11 3
d89 1
a89 1
 * This function converts the message from a code to the desired language - works only for Comand Line arguments
d120 1
a120 1
 * This function converts the message from a code to the desired language - works only for Ncurses Interface
d152 1
a152 1
 * This function converts the message from a code to the desired language - works only for Web Interface
@


1.1
log
@Initial revision
@
text
@d8 6
a13 3
 * $Author$
 * $Date$
 * $Log$
d79 1
a79 1
 * kaaUmlUserInterfaceMessageNumberType - specifies what is the number of message we want to show (I)
d110 1
a110 1
 * kaaUmlUserInterfaceMessageNumberType - specifies what is the number of message we want to show (I)
d142 1
a142 1
 * kaaUmlUserInterfaceMessageNumberType - specifies what is the number of message we want to show (I)
d165 1
a165 1
/* $RCSfile$ */
@

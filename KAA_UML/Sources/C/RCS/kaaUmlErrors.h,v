head	1.9;
access;
symbols;
locks
	karen.arcoverde:1.9; strict;
comment	@ * @;


1.9
date	2018.12.20.21.21.29;	author karen.arcoverde;	state Exp;
branches;
next	1.8;

1.8
date	2018.12.16.00.31.17;	author karen.arcoverde;	state Exp;
branches;
next	1.7;

1.7
date	2018.11.16.04.51.56;	author karen.arcoverde;	state Exp;
branches;
next	1.6;

1.6
date	2018.11.14.02.42.05;	author karen.arcoverde;	state Exp;
branches;
next	1.5;

1.5
date	2018.11.14.00.05.43;	author karen.arcoverde;	state Exp;
branches;
next	1.4;

1.4
date	2018.11.05.15.41.23;	author karen.arcoverde;	state Exp;
branches;
next	1.3;

1.3
date	2018.11.03.21.00.55;	author karen.arcoverde;	state Exp;
branches;
next	1.2;

1.2
date	2018.11.03.20.51.38;	author karen.arcoverde;	state Exp;
branches;
next	1.1;

1.1
date	2018.11.03.03.43.25;	author karen.arcoverde;	state Exp;
branches;
next	;


desc
@@


1.9
log
@*** empty log message ***
@
text
@/*
 * Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * Prof. Marcelo Luiz Drumond Lanza 
 * EEL270 - Computacao II - Turma 2018/2
 *
 * $Author: karen.arcoverde $
 * $Date: 2018/12/16 00:31:17 $
 * $Log: kaaUmlErrors.h,v $
 * Revision 1.8  2018/12/16 00:31:17  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.7  2018/11/16 04:51:56  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.6  2018/11/14 02:42:05  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.5  2018/11/14 00:05:43  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.4  2018/11/05 15:41:23  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.3  2018/11/03 21:00:55  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.2  2018/11/03 20:51:38  karen.arcoverde
 * *** empty log message ***
 *
 * Revision 1.1  2018/11/03 03:43:25  karen.arcoverde
 * Initial revision
 *
 */

#ifndef KAA_UML_ERRORS
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.8 $"

#include "kaaUmlTypes.h"


typedef enum 
{
	kaaUmlOk, 
	kaaUmlFileError, 
	kaaUmlErrorGettingMessage, 
	kaaUmlErrorGettingInterfaceMessage, 
	kaaUmlInvalidPathDirectory,
	kaaUmlInvalidFileName,
	kaaUmlInvalidAbsolutePathFile,
	kaaUmlInvalidAbsolutePathDirectorySize,
	kaaUmlInvalidFileNameSize,
	kaaUmlInvalidString,
	kaaUmlInvalidCharacterSet,
	kaaUmlInvalidMinimumSize,
	kaaUmlMinimumSizeBiggerMaximum,
	kaaUmlInvalidStringSize,
	kaaUmlInvalidStringComparison,
	kaaUmlInvalidNicknameDotPosition,
	kaaUmlNoDotInNickname,
	kaaUmlDotMoreThanOneOccurrence,
	kaaUmlInvalidEmailAtPosition,
	kaaUmlNoAtInEmail,
	kaaUmlAtMoreThanOneOccurrence,
	kaaUmlInvalidStringCreate,
	kaaUmlInvalidFullName,
	kaaUmlInvalidFirstNickname,
	kaaUmlInvalidSecondNickname,
	kaaUmlInvalidNicknameSize,
	kaaUmlInvalidEncodedPassword,
	kaaUmlInvalidCryptAlgorithmType,
	kaaUmlInvalidSymbolAmount,
	kaaUmlInvalidSymbolPosition,
	kaaUmlInvalidFlatPassword,
	kaaUmlInvalidCompleteSalt,
	kaaUmlCheckPasswordNotMatch,
	kaaUmlErrorsAmount

} kaaUmlErrorType;



/*
 * char *
 * KaaUmlGetCliErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlErrorType - code about the error that occurred (I)
 * kaaUmlLanguageType - say in what language do we see the message error output (I)
 *
 * Returned code:
 * char * - Is the message error converted 
 *
 * Description:
 * This function converts the error from a code to the wanted language - works only for Comand Line arguments
 */

char *
KaaUmlGetCliErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);

/*
 * char *
 * KaaUmlGetCliErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlErrorType - code about the error that occurred (I)
 * kaaUmlLanguageType - say in what language do we see the message error output (I)
 *
 * Returned code:
 * char * - Is the message error converted 
 *
 * Description:
 * This function converts the error from a code to the wanted language - works only for Ncurses 
 */

char *
KaaUmlGetNcursesErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);


/*
 * char *
 * KaaUmlGetCliErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);
 *
 * Arguments:
 * kaaUmlErrorType - code about the error that occurred (I)
 * kaaUmlLanguageType - say in what language do we see the message error output (I)
 *
 * Returned code:
 * char * - Is the message error converted 
 *
 * Description:
 * This function converts the error from a code to the wanted language - works only for Web Interface 
 */

char *
KaaUmlGetWebErrorMessage (kaaUmlErrorType, kaaUmlLanguageType);


#endif
/* $RCSfile: kaaUmlErrors.h,v $ */
@


1.8
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/16 04:51:56 $
d11 3
d38 1
a38 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.7 $"
d76 2
@


1.7
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/14 02:42:05 $
d11 3
d35 1
a35 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.6 $"
d72 1
@


1.6
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/14 00:05:43 $
d11 3
d32 1
a32 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.5 $"
d64 1
a64 1
	kaaUmlInvalidFullNameSize,
@


1.5
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/05 15:41:23 $
d11 3
d29 1
a29 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.4 $"
d48 1
a48 1
	kaaUmlMinimumSizeBiggerEqualMaximum,
@


1.4
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/03 21:00:55 $
d11 3
d26 1
a26 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.3 $"
d37 26
@


1.3
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/03 20:51:38 $
d11 3
d23 1
a23 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.2 $"
d28 9
a36 1
typedef enum {kaaUmlOk, kaaUmlErrorsAmount} kaaUmlErrorType;
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2018/11/03 03:43:25 $
d11 3
d20 1
a20 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision: 1.1 $"
d41 1
a41 1
 * This function converts the error from a code to the desired language - works only for Comand Line arguments
d59 1
a59 1
 * This function converts the error from a code to the desired language - works only for Ncurses 
d78 1
a78 1
 * This function converts the error from a code to the desired language - works only for Web Interface 
@


1.1
log
@Initial revision
@
text
@d8 6
a13 3
 * $Author$
 * $Date$
 * $Log$
d17 1
a17 1
#define KAA_UML_ERRORS "@@(#)kaaUmlErrors.h $Revision$"
d32 1
a32 1
 * kaaUmlLanguageType - say in what language do we expect the message error output (I)
d50 1
a50 1
 * kaaUmlLanguageType - say in what language do we expect the message error output (I)
d69 1
a69 1
 * kaaUmlLanguageType - say in what language do we expect the message error output (I)
d83 1
a83 1
/* $RCSfile$ */
@
